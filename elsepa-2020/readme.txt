
                  ************************************
                 ***     The code system ELSEPA     ***
                  ************************************

        Francesc Salvat, Aleksander Jablonski and Cedric J. Powell


   This code system computes scattering amplitudes and cross sections
for ELastic Scattering of Electrons and Positrons by neutral Atoms (Z=1
to 103), molecules and positive ions, and projectiles with kinetic
energies larger than about 5 eV. The calculations are usually performed
by means of relativistic (Dirac) partial wave analysis for an effective
local central-interaction potential. When the convergence of the partial
wave series is too slow, alternative approximate calculation methods are
applied. Scattering by molecules is described by using an independent-
atom approximation in which the scattering amplitudes are obtained by
adding coherently the waves scattered from all the atoms in the
molecule, and performing an average over random orientations of the
molecule. The programs also calculate elastic scattering by single atoms
in solids using a muffin-tin model potential.

------------------------------------------------------------------------
   A detailed description of the ELSEPA code system is given in the
following article,
   F. Salvat, A. Jablonski and C.J. Powell,
   'ELSEPA--Dirac partial-wave calculation of elastic scattering of
   electrons and positrons by atoms, positive ions and molecules',
   Comput. Phys. Commun. 165 (2005) 157-190.

   The present package extends the original version of ELSEPA by
including a refined absorption potential model for scattering in solids,
which is described by
   D. Bote, F. Salvat, A. Jablonski and C.J. Powell,
   'The effect of inelastic absorption on the elastic scattering of
   electrons and positrons in amorphous solids',
   J. Electron Spectrosc. Rel. Phenom. 175 (2009) 41–54.

In addition, the subroutines that solved the Dirac radial wave equations
in the original code were replaced by the subroutine package RADIAL of
   F. Salvat and J.M. Fernandez-Varea,
   'RADIAL: a Fortran subroutine package for the solution of the radial
   Schrodinger and Dirac wave equations',
   Comput. Phys. Commun. 240 (2019) 165–177.
   (https://doi.org/10.1016/j.cpc.2019.02.011)
------------------------------------------------------------------------

   The distribution package consists of Fortran programs (source code
files) and numerical data files. To ensure portability, all files are in
text (ASCII) format. The programs conform to ISO Standard Fortran 90
and compile correctly with Fortran 90 compilers.


***  DISTRIBUTION PACKAGE.

   The distribution package consists of a single directory named
'elsepa-2020', which contains the subdirectories 'database' and
'test-run-output', and the following  files:
  'readme.txt' ... the present file.
  'atoms-in-solids.pdf' ... a brief description of the absorption
                   potential for scattering by atoms in elementary
                   solids.
  'elsepa2020.f' ... calculation of elastic scattering of electrons
                   and positrons by neutral atoms and positive ions.
                   Dirac partial wave analysis for real and complex
                   central potentials; high-energy factorizations.
  'radial.f' ..... subroutine package for solving the radial Dirac
                   wave equation.
  'elscata.f' .... main program for scattering by atoms and ions.
  'elscatm.f'..... main program for scattering by molecules.
  'elscata.in', 'minimal.in', 'Al.in' ... examples of input data files
                   for 'elscata'.
  'H2O.in' ....... example of input data file for 'elscatm'.
  'dcsa.gnu', 'dcsMott.gnu', 'scfield.gnu' ... GNUPLOT scripts for
                   plotting the calculation results (differential
                   cross section and scattering amplitudes) and the
                   scattering potential for atoms.
  'dcsm.gnu' ..... GNUPLOT script for plotting the calculated
                   differential cross sections of molecules.

  The directory 'database' contains the following 206 files;
  'z_nnn.den' .... Dirac-FocK electron densities of neutral atoms
                   (Z=1-103).
  'z_nnn.dfs' .... high-energy Dirac-Fock screening functions
                   (Z=1-103).
                   'nnn' (three digits) is the atomic number Z.

  The directory 'test-run-output' contains the file 'dcs_1p000e03.dat',
  which is the result generated by 'elscata' with the input data file
  'elscata.in'. The latter file is the same as the one used to generate
  the test run output printed in the original article [Comput. Phys.
  Commun. 165 (2005) 157-190]. Comparison of results from the original
  program and from the present new version shows that the calculated
  integrated cross sections differ in less than about 0.01 %.


   The programs 'elscata' and 'elscatm' read data from input files,
whose structure is described in the heading comments of the Fortran
source files ('*.f'). Examples of input data files ('*.in') are included
in the distribution package. The calculated differential cross section
for the energy x.yyyezz (in eV, E format) is written to an output file
named 'dcs_xpyyyezz.dat', in a format ready for visualization with a
plotting program. Several subroutines write partial information
(absorption potential, phase shifts, ...) on the standard output unit
(=6) as the calculation progresses; they may also generate files with
the extension '.dat' with self-explanatory contents. This does not
impair the calculation speed and helps the user to get a feeling of the
time that a planned calculation may take and to directly inspect partial
results. Typical running times on a Pentium 4, 2.8 GHz, are between a
few seconds and about two minutes, depending on the atomic number of the
target, the adopted potential model and the kinetic energy of the
projectile.


***  OPERATION INSTRUCTIONS (for MS Windows).

1) Copy the contents of the zipped file 'elsepa2020.zip' into your hard
disk, keeping its directory structure.

2) Open a command (DOS) window and change directory to set 'elsepa2020'
as the current directory.

3) Generate the executable binary files 'elscata.exe' and 'elscatm.exe'
using your FORTRAN compiler.

   For example, when using the gfortran compiler, these executable
   files are generated by means of the commands
      'gfortran -Os -Wall elscata.f -o elscata.exe'
      'gfortran -Os -Wall elscatm.f -o elscatm.exe'

   These two programs use the external subroutines and functions
contained in the source files 'elsepa2020.f' and 'radial.f'; these files
have been inserted into the source files of the main programs by means
of 'INCLUDE' statements.

   Depending on the selected interaction potential model and the energy
of the projectile, the codes 'elscata' and 'elscatm' read information
from the files 'z_nnn.den' and 'z_nnn.dfs'. Note that the programs
assume that the executable binaries are in the parent directory of the
'database' directory.

4) Create the input data file 'mycase.in' for your problem, and place it
in directory 'elsepa-2020'. Examples of input data files are provided
(they have the extension '.in').

5) In the command window, change the active directory to 'elsepa2020'.
Execute the code by entering the command
      'elscata.exe < mycase.in'  or  'elscatm.exe < mycase.in'
which redirects the standard input unit (=5) to your input data file.

To visualize the contents of output files, we use GNUPLOT, which is
small in size, available for various platforms (including Windows and
Linux) and free (distribution sites are listed at the Gnuplot Central
site, http://www.gnuplot.info). When GNUPLOT is installed on the
computer, the provided scripts plot the program output on the screen.

                  ------------============------------
